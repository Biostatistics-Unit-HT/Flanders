params {
    // -- INPUT DATA --
    summarystats_input = null // Input file with summary statistics for mungin and finemap
    coloc_h5ad_input = null // Input h5ad file(s) for coloc
    coloc_id = "coloc_run" // ID for the coloc project

    // -- OUTPUT SETTINGS --
    outdir = "flanders_output"
    
    // -- MUNGING and FINEMAPPING SETTINGS --
    run_liftover = true //perform liftover from GRCh37 to GRCh38 when needed
    large_locus_size = 2000000 // Maximum locus size allowed to finemap
    susie_max_iter = 400 // Maximum number of IBSS iterations to perform, see https://stephenslab.github.io/susieR/reference/susie.html
    publish_susie = true // Whether to publish the susie finemap .rds intermediate files
    
    // -- COLOCALIZATION SETTINGS --
    run_colocalization = true
    coloc_batch_size = 5000 // Number of loci to be colocalised in each batch
    skip_dentist = true
    pph4_threshold = 0.75 
    pph3_threshold = 0.75
    coloc_filter_studies_table = null // Path to a TSV file of study_id, phenotype_id to exclude from colocalization analysis
    coloc_filter_previous_studies = true // In case a previous h5ad input is given, do not evaluate colocalizations that involves only previous loci
    
    // -- PIPELINE SETTINGS --
    is_test_profile = false
    publish_dir_mode = 'copy'


    // Config options
    custom_config_version      = 'master'
    custom_config_base         = "https://raw.githubusercontent.com/nf-core/configs/${params.custom_config_version}"
    hostnames                  = [:]
    config_profile_description = null
    config_profile_contact     = null
    config_profile_url         = null
    config_profile_name        = null

}

plugins { id 'nf-schema@2.4.1' }

// Load base.config by default for all pipelines
includeConfig 'conf/base.config'

// Load nf-core custom profiles from different Institutions
try {
    includeConfig "${params.custom_config_base}/nfcore_custom.config"
} catch (Exception e) {
    System.err.println("WARNING: Could not load nf-core/config profiles: ${params.custom_config_base}/nfcore_custom.config")
}

// Computational environments
profiles {
    conda {
        conda.enabled           = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        conda.channels          = ['conda-forge', 'bioconda']
        apptainer.enabled       = false
    }
    mamba {
        conda.enabled           = true
        conda.useMamba          = true
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    docker {
        docker.enabled          = true
        conda.enabled           = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
        docker.runOptions       = '-u $(id -u):$(id -g)'
    }
    singularity {
        singularity.enabled     = true
        singularity.autoMounts  = true
        conda.enabled           = false
        docker.enabled          = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    podman {
        podman.enabled          = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        shifter.enabled         = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    shifter {
        shifter.enabled         = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        charliecloud.enabled    = false
        apptainer.enabled       = false
    }
    charliecloud {
        charliecloud.enabled    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        apptainer.enabled       = false
    }
    apptainer {
        apptainer.enabled       = true
        apptainer.autoMounts    = true
        conda.enabled           = false
        docker.enabled          = false
        singularity.enabled     = false
        podman.enabled          = false
        shifter.enabled         = false
        charliecloud.enabled    = false
    }
    wave {
        apptainer.ociAutoPull   = true
        singularity.ociAutoPull = true
        wave.enabled            = true
        wave.freeze             = true
        wave.strategy           = 'conda,container'
    }
    test               { includeConfig 'conf/test.config'       }
    test_long          { includeConfig 'conf/test.config'       }
}

// Set filename and location for timeline, report, trace and dag
def trace_timestamp = new java.util.Date().format( 'yyyy-MM-dd_HH-mm-ss')
timeline {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_timeline_${trace_timestamp}.html"
}
report {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_report_${trace_timestamp}.html"
}
trace {
    enabled = true
    file    = "${params.outdir}/pipeline_info/execution_trace_${trace_timestamp}.txt"
}
dag {
    enabled = true
    file    = "${params.outdir}/pipeline_info/pipeline_dag_${trace_timestamp}.html"
}

validation {
  help {
    enabled = true
  }
}

manifest {
    name            = 'Flanders'
    author          = """Arianna Landini, Sodbo Sharapov, Nicola Pirastu, Edoardo Giacopuzzi, Bruno Ariano"""
    homePage        = 'https://github.com/Biostatistics-Unit-HT/Flanders.git'
    description     = """Finemapping and colocalisation pipeline"""
    mainScript      = 'main.nf'
    nextflowVersion = '!>=24.04'
    version         = '1.0.0'
    doi             = ''
}